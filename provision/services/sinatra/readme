
   # build base Centos and Ruby images 

   ## 
   ## create a bridge network 
   ##
   
   docker network create appnet
   docker network ls
   docker network inspect appnet
   
   ##
   ## Redis database
   ##
    
   docker build -t="maxmin13/redis:v1" .
   docker run -v $PWD/redis.conf:/usr/local/etc/redis/redis.conf -d --net appnet  --name redisdb maxmin13/redis:v1
   docker exec -ti redisdb /bin/bash
   docker port redis
   redis-cli -h 127.0.0.1 -p 6379 # test the connection by adding: -p 6379:6379 

   ##
   ## Sinatra webapp
   ##
   
   docker build -t="maxmin13/sinatra:v1" .
   docker run -d --net appnet --name webapp -v $PWD/sinatra:/opt/webapp maxmin13/sinatra:v1 ### -p 4567:4567
   docker top webapp
   docker logs -f webapp
   docker exec -ti webapp /bin/bash
   wget http://localhost:4567/info
   http://localhost:4567/json
   curl -i -H 'Accept: application/ json' -d 'name = Foo& status = Bar' http://localhost:4567/json
   
   ## Useful commands:
   
   docker inspect webapp  | jq '.[].NetworkSettings'
   docker inspect -f '{{ .NetworkSettings.IPAddress }}' webapp
   docker inspect -f '{{ .NetworkSettings.Gateway }}' webapp 
   docker inspect --format='{{(index (index .NetworkSettings.Ports "4567/tcp") 0).HostPort}}' webapp
   
   sudo iptables -t nat -L -n
   docker inspect -f '{{ .NetworkSettings.Networks.appnet.IPAddress }}' redisdb
   docker inspect -f '{{ .NetworkSettings.Networks.appnet.IPAddress }}' webapp
   docker network inspect appnet
   
   yum install bind-utils traceroute
   nslookup redisdb
   traceroute google.com
   ping redisdb
   ping redisdb.appnet
   
   docker network connect app db2
   docker network disconnect app db2
   
